myFunction= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y0,y1,y2]
  evaluation :   [1.5,2.5,-0.5] * (x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)) + [-3.5,0.5,-1.5] * (exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1))
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Value at  [1.2,2.3,3.4] = [-32.6345,-2.5861,-10.9343]
Gradient at  [1.2,2.3,3.4] = [[  178.768   -38.5532   82.095  ]
 [ -375.374    51.2006 -159.854  ]
 [ -305.359    42.7773 -130.512  ]]
Hessian at  [1.2,2.3,3.4] = sheet #0
[[  -1751.3    4267.4    3202.7  ]
 [   4267.4  -11041     -8261.4  ]
 [   3202.7   -8261.4   -6049.1  ]]
sheet #1
[[    230.59   -612.35   -462.4  ]
 [   -612.35   1581.5    1192.5  ]
 [   -462.4    1192.5     891.78 ]]
sheet #2
[[   -742.32   1830      1374.6  ]
 [   1830     -4733.6   -3545.8  ]
 [   1374.6   -3545.8   -2604.1  ]]
Marginal  0 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y]
  evaluation :   (1.5)*x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)+(-3.5)*exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal  1 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y]
  evaluation :   (2.5)*x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)+(0.5)*exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal  2 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y]
  evaluation :   (-0.5)*x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)+(-1.5)*exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (0,1)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y0,y1]
  evaluation :   [1.5,2.5] * (x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)) + [-3.5,0.5] * (exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1))
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (0,2)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y0,y1]
  evaluation :   [1.5,-0.5] * (x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)) + [-3.5,-1.5] * (exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1))
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (1,2)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y0,y1]
  evaluation :   [2.5,-0.5] * (x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)) + [0.5,-1.5] * (exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1))
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
