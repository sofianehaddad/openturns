myFunction= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y2,y1,y2]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y2]
  evaluation :   

  | y1 = x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)
  | y2 = x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)

  gradient   :   
  | d(y1) / d(x1) = ((3*((x1^2)*(sin((x2)+(2.5*x3))))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x2) = ((x1^3)*(cos((x2)+(2.5*x3))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x3) = ((2.5*((x1^3)*(cos((x2)+(2.5*x3))))))+(((2*((((x1)+(x2))^(2))*(x3))))/(((1)+(x3^2))^(2))) 
  | d(y2) / d(x1) = (sin((x3)+(2.5*x1)))+((2.5*((x1)*(cos((x3)+(2.5*x1))))))+(((2*((((x2)+(x3))^(2))*(x1))))/(((1)+(x1^2))^(2))) 
  | d(y2) / d(x2) = (-(((2*x2)+(2*x3))/((1)+(x1^2)))) 
  | d(y2) / d(x3) = ((x1)*(cos((x3)+(2.5*x1))))+((-(((2*x2)+(2*x3))/((1)+(x1^2))))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = ((6*((x1)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x2)d(x1) = ((3*((x1^2)*(cos((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  |    d^2(y1) / d(x2)^2 = ((-((x1^3)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x3)d(x1) = ((7.5*((x1^2)*(cos((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-2.5*((x1^3)*(sin((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((2*((((x1)+(x2))^(2))/(((1)+(x3^2))^(2)))))+((-2*(((4*((((x1)+(x2))^(2))*(x3^2)*((1)+(x3^2)))))/((((1)+(x3^2))^(2))^(2)))))+((-6.25*((x1^3)*(sin((x2)+(2.5*x3)))))) 
  |    d^2(y2) / d(x1)^2 = ((5*(cos((x3)+(2.5*x1)))))+((-6.25*((x1)*(sin((x3)+(2.5*x1))))))+((2*((((x2)+(x3))^(2))/(((1)+(x1^2))^(2)))))+((-2*(((4*((((x2)+(x3))^(2))*(x1^2)*((1)+(x1^2)))))/((((1)+(x1^2))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2)) 
  |    d^2(y2) / d(x2)^2 = (-((2)/((1)+(x1^2)))) 
  | d^2(y2) / d(x3)d(x1) = (cos((x3)+(2.5*x1)))+((-2.5*((x1)*(sin((x3)+(2.5*x1))))))+(((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2))) 
  | d^2(y2) / d(x3)d(x2) = (-((2)/((1)+(x1^2)))) 
  |    d^2(y2) / d(x3)^2 = ((-((x1)*(sin((x3)+(2.5*x1))))))+((-((2)/((1)+(x1^2))))) 
,NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y2]
  evaluation :   

  | y1 = exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  | y2 = exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)

  gradient   :   
  | d(y1) / d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))))) 
  | d(y1) / d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 
  | d(y1) / d(x3) = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 
  | d(y2) / d(x1) = ((exp(((-((x2)*(x3))))+(x1)))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))) 
  | d(y2) / d(x2) = ((-(((x3)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+((-(((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))))) 
  | d(y2) / d(x3) = ((-(((x2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = (((x2^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-((((-((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))))+((-((cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+(((2*((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))) 
  | d^2(y1) / d(x2)d(x1) = ((-(((exp(((-((x1)*(x2))))+(x3)))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x1)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((-((x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x2)^2 = (((x1^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((-((x1)*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x3^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+((((-((x2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2^2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x2^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y2) / d(x1)^2 = ((exp(((-((x2)*(x3))))+(x1)))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((x3^2)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((-(((x3)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((-((x3^2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-((((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))+((x3)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))))+(((-2*((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))) 
  |    d^2(y2) / d(x2)^2 = (((x3^2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-((((-((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))))+((-((cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))))+(((2*((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))) 
  | d^2(y2) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((-((x2)*(exp(((-((x2)*(x3))))+(x1)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x1)*(x3)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x1)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  | d^2(y2) / d(x3)d(x2) = ((-(((exp(((-((x2)*(x3))))+(x1)))+((-((x2)*(x3)*(exp(((-((x2)*(x3))))+(x1)))))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((x2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((-((x1)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))))+((-((x1)*(x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((2*((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  |    d^2(y2) / d(x3)^2 = (((x2^2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((-((x2)*(exp(((-((x2)*(x3))))+(x1)))*(x1)*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((x1^2)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((-((x1)*(x2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x1^2)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
]
  gradient   : class=AggregatedNumericalMathGradientImplementation evaluation=class=AggregatedNumericalMathEvaluationImplementation functions=[class=NumericalMathFunction name=Unnamed implementation=class=NumericalMathFunctionImplementation name=Unnamed description=[x1,x2,x3,y1,y2] evaluationImplementation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)] gradientImplementation=class=AnalyticalNumericalMathGradientImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)] hessianImplementation=class=AnalyticalNumericalMathHessianImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)],class=NumericalMathFunction name=Unnamed implementation=class=NumericalMathFunctionImplementation name=Unnamed description=[x1,x2,x3,y1,y2] evaluationImplementation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)] gradientImplementation=class=AnalyticalNumericalMathGradientImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)] hessianImplementation=class=AnalyticalNumericalMathHessianImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)]]
  hessian    : class=AggregatedNumericalMathHessianImplementation evaluation=class=AggregatedNumericalMathEvaluationImplementation functions=[class=NumericalMathFunction name=Unnamed implementation=class=NumericalMathFunctionImplementation name=Unnamed description=[x1,x2,x3,y1,y2] evaluationImplementation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)] gradientImplementation=class=AnalyticalNumericalMathGradientImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)] hessianImplementation=class=AnalyticalNumericalMathHessianImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2),x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)],class=NumericalMathFunction name=Unnamed implementation=class=NumericalMathFunctionImplementation name=Unnamed description=[x1,x2,x3,y1,y2] evaluationImplementation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)] gradientImplementation=class=AnalyticalNumericalMathGradientImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)] hessianImplementation=class=AnalyticalNumericalMathHessianImplementation name=Unnamed evaluation=class=AnalyticalNumericalMathEvaluationImplementation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y1,y2] formulas=[exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1),exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)]]
Value at  [1.2,2.3,3.4] = [-2.67038,-13.1757,8.17969,-0.00142562]
Gradient at  [1.2,2.3,3.4] = [[  -4.79497      16.1934      -53.1316        0.000407664 ]
 [  -0.893127     -4.67213     106.867         0.0043079   ]
 [  -0.311467     -3.48031      87.1119        0.00392597  ]]
Hessian at  [1.2,2.3,3.4] = sheet #0
[[    -7.222        -0.99874      -1.797     ]
 [    -0.99874       1.5358        4.5394    ]
 [    -1.797         4.5394       10.178     ]]
sheet #1
[[   -10.759         4.5955        5.2391    ]
 [     4.5955       -0.81967      -0.81967   ]
 [     5.2391       -0.81967      -0.95953   ]]
sheet #2
[[   497.28      -1219.7        -915.82      ]
 [ -1219.7        3155.2        2362.4       ]
 [  -915.82       2362.4        1732.7       ]]
sheet #3
[[    -0.018954      0.0043086    -0.007232  ]
 [     0.0043086    -0.014647     -0.0084823 ]
 [    -0.007232     -0.0084823    -0.013158  ]]
Marginal  0 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation :   x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)
  gradient   :   
  | d(y1) / d(x1) = ((3*((x1^2)*(sin((x2)+(2.5*x3))))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x2) = ((x1^3)*(cos((x2)+(2.5*x3))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x3) = ((2.5*((x1^3)*(cos((x2)+(2.5*x3))))))+(((2*((((x1)+(x2))^(2))*(x3))))/(((1)+(x3^2))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = ((6*((x1)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x2)d(x1) = ((3*((x1^2)*(cos((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  |    d^2(y1) / d(x2)^2 = ((-((x1^3)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x3)d(x1) = ((7.5*((x1^2)*(cos((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-2.5*((x1^3)*(sin((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((2*((((x1)+(x2))^(2))/(((1)+(x3^2))^(2)))))+((-2*(((4*((((x1)+(x2))^(2))*(x3^2)*((1)+(x3^2)))))/((((1)+(x3^2))^(2))^(2)))))+((-6.25*((x1^3)*(sin((x2)+(2.5*x3)))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal  1 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2]
  evaluation :   x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)
  gradient   :   
  | d(y2) / d(x1) = (sin((x3)+(2.5*x1)))+((2.5*((x1)*(cos((x3)+(2.5*x1))))))+(((2*((((x2)+(x3))^(2))*(x1))))/(((1)+(x1^2))^(2))) 
  | d(y2) / d(x2) = (-(((2*x2)+(2*x3))/((1)+(x1^2)))) 
  | d(y2) / d(x3) = ((x1)*(cos((x3)+(2.5*x1))))+((-(((2*x2)+(2*x3))/((1)+(x1^2))))) 

  hessian    :   
  |    d^2(y2) / d(x1)^2 = ((5*(cos((x3)+(2.5*x1)))))+((-6.25*((x1)*(sin((x3)+(2.5*x1))))))+((2*((((x2)+(x3))^(2))/(((1)+(x1^2))^(2)))))+((-2*(((4*((((x2)+(x3))^(2))*(x1^2)*((1)+(x1^2)))))/((((1)+(x1^2))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2)) 
  |    d^2(y2) / d(x2)^2 = (-((2)/((1)+(x1^2)))) 
  | d^2(y2) / d(x3)d(x1) = (cos((x3)+(2.5*x1)))+((-2.5*((x1)*(sin((x3)+(2.5*x1))))))+(((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2))) 
  | d^2(y2) / d(x3)d(x2) = (-((2)/((1)+(x1^2)))) 
  |    d^2(y2) / d(x3)^2 = ((-((x1)*(sin((x3)+(2.5*x1))))))+((-((2)/((1)+(x1^2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal  2 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation :   exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   
  | d(y1) / d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))))) 
  | d(y1) / d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 
  | d(y1) / d(x3) = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = (((x2^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-((((-((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))))+((-((cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+(((2*((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))) 
  | d^2(y1) / d(x2)d(x1) = ((-(((exp(((-((x1)*(x2))))+(x3)))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x1)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((-((x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x2)^2 = (((x1^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((-((x1)*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x3^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+((((-((x2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2^2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x2^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal  3 = NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2]
  evaluation :   exp(-x2 * x3 + x1) / cos(1.0 + x3 * x1 - x2)
  gradient   :   
  | d(y2) / d(x1) = ((exp(((-((x2)*(x3))))+(x1)))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))) 
  | d(y2) / d(x2) = ((-(((x3)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+((-(((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))))) 
  | d(y2) / d(x3) = ((-(((x2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2))) 

  hessian    :   
  |    d^2(y2) / d(x1)^2 = ((exp(((-((x2)*(x3))))+(x1)))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((x3^2)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((-(((x3)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((-((x3^2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-((((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))+((x3)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))))+(((-2*((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))) 
  |    d^2(y2) / d(x2)^2 = (((x3^2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-((((-((x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))))+((-((cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))))+(((2*((exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))) 
  | d^2(y2) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((-((x2)*(exp(((-((x2)*(x3))))+(x1)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x1)*(x3)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((x1)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(x3)*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  | d^2(y2) / d(x3)d(x2) = ((-(((exp(((-((x2)*(x3))))+(x1)))+((-((x2)*(x3)*(exp(((-((x2)*(x3))))+(x1)))))))/(cos((1)+((x3)*(x1))+(-1*x2))))))+(((x2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((-((x1)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))))+((-((x1)*(x3)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((2*((x1)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
  |    d^2(y2) / d(x3)^2 = (((x2^2)*(exp(((-((x2)*(x3))))+(x1))))/(cos((1)+((x3)*(x1))+(-1*x2))))+(((-((x2)*(exp(((-((x2)*(x3))))+(x1)))*(x1)*(sin((1)+((x3)*(x1))+(-1*x2))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((((x1^2)*(cos((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1))))+((-((x1)*(x2)*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))))))/((cos((1)+((x3)*(x1))+(-1*x2)))^(2)))+((-(((-2*((x1^2)*(sin((1)+((x3)*(x1))+(-1*x2)))*(exp(((-((x2)*(x3))))+(x1)))*(sin((1)+((x3)*(x1))+(-1*x2)))*(cos((1)+((x3)*(x1))+(-1*x2))))))/(((cos((1)+((x3)*(x1))+(-1*x2)))^(2))^(2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (0,1)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y2]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y2]
  evaluation :   

  | y1 = x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)
  | y2 = x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)

  gradient   :   
  | d(y1) / d(x1) = ((3*((x1^2)*(sin((x2)+(2.5*x3))))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x2) = ((x1^3)*(cos((x2)+(2.5*x3))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x3) = ((2.5*((x1^3)*(cos((x2)+(2.5*x3))))))+(((2*((((x1)+(x2))^(2))*(x3))))/(((1)+(x3^2))^(2))) 
  | d(y2) / d(x1) = (sin((x3)+(2.5*x1)))+((2.5*((x1)*(cos((x3)+(2.5*x1))))))+(((2*((((x2)+(x3))^(2))*(x1))))/(((1)+(x1^2))^(2))) 
  | d(y2) / d(x2) = (-(((2*x2)+(2*x3))/((1)+(x1^2)))) 
  | d(y2) / d(x3) = ((x1)*(cos((x3)+(2.5*x1))))+((-(((2*x2)+(2*x3))/((1)+(x1^2))))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = ((6*((x1)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x2)d(x1) = ((3*((x1^2)*(cos((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  |    d^2(y1) / d(x2)^2 = ((-((x1^3)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x3)d(x1) = ((7.5*((x1^2)*(cos((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-2.5*((x1^3)*(sin((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((2*((((x1)+(x2))^(2))/(((1)+(x3^2))^(2)))))+((-2*(((4*((((x1)+(x2))^(2))*(x3^2)*((1)+(x3^2)))))/((((1)+(x3^2))^(2))^(2)))))+((-6.25*((x1^3)*(sin((x2)+(2.5*x3)))))) 
  |    d^2(y2) / d(x1)^2 = ((5*(cos((x3)+(2.5*x1)))))+((-6.25*((x1)*(sin((x3)+(2.5*x1))))))+((2*((((x2)+(x3))^(2))/(((1)+(x1^2))^(2)))))+((-2*(((4*((((x2)+(x3))^(2))*(x1^2)*((1)+(x1^2)))))/((((1)+(x1^2))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2)) 
  |    d^2(y2) / d(x2)^2 = (-((2)/((1)+(x1^2)))) 
  | d^2(y2) / d(x3)d(x1) = (cos((x3)+(2.5*x1)))+((-2.5*((x1)*(sin((x3)+(2.5*x1))))))+(((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2))) 
  | d^2(y2) / d(x3)d(x2) = (-((2)/((1)+(x1^2)))) 
  |    d^2(y2) / d(x3)^2 = ((-((x1)*(sin((x3)+(2.5*x1))))))+((-((2)/((1)+(x1^2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (0,2)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1,y1]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation :   x1^3 * sin(x2 + 2.5 * x3) - (x1 + x2)^2 / (1.0 + x3^2)
  gradient   :   
  | d(y1) / d(x1) = ((3*((x1^2)*(sin((x2)+(2.5*x3))))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x2) = ((x1^3)*(cos((x2)+(2.5*x3))))+((-(((2*x1)+(2*x2))/((1)+(x3^2))))) 
  | d(y1) / d(x3) = ((2.5*((x1^3)*(cos((x2)+(2.5*x3))))))+(((2*((((x1)+(x2))^(2))*(x3))))/(((1)+(x3^2))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = ((6*((x1)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x2)d(x1) = ((3*((x1^2)*(cos((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  |    d^2(y1) / d(x2)^2 = ((-((x1^3)*(sin((x2)+(2.5*x3))))))+((-((2)/((1)+(x3^2))))) 
  | d^2(y1) / d(x3)d(x1) = ((7.5*((x1^2)*(cos((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-2.5*((x1^3)*(sin((x2)+(2.5*x3))))))+((2*(((x3)*((2*x1)+(2*x2)))/(((1)+(x3^2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((2*((((x1)+(x2))^(2))/(((1)+(x3^2))^(2)))))+((-2*(((4*((((x1)+(x2))^(2))*(x3^2)*((1)+(x3^2)))))/((((1)+(x3^2))^(2))^(2)))))+((-6.25*((x1^3)*(sin((x2)+(2.5*x3)))))) 
,NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation :   exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   
  | d(y1) / d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))))) 
  | d(y1) / d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 
  | d(y1) / d(x3) = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = (((x2^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-((((-((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))))+((-((cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+(((2*((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))) 
  | d^2(y1) / d(x2)d(x1) = ((-(((exp(((-((x1)*(x2))))+(x3)))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x1)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((-((x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x2)^2 = (((x1^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((-((x1)*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x3^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+((((-((x2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2^2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x2^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
Marginal (1,2)= NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2,y1]
  evaluation : [NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y2]
  evaluation :   x1^1 * sin(x3 + 2.5 * x1) - (x2 + x3)^2 / (1.0 + x1^2)
  gradient   :   
  | d(y2) / d(x1) = (sin((x3)+(2.5*x1)))+((2.5*((x1)*(cos((x3)+(2.5*x1))))))+(((2*((((x2)+(x3))^(2))*(x1))))/(((1)+(x1^2))^(2))) 
  | d(y2) / d(x2) = (-(((2*x2)+(2*x3))/((1)+(x1^2)))) 
  | d(y2) / d(x3) = ((x1)*(cos((x3)+(2.5*x1))))+((-(((2*x2)+(2*x3))/((1)+(x1^2))))) 

  hessian    :   
  |    d^2(y2) / d(x1)^2 = ((5*(cos((x3)+(2.5*x1)))))+((-6.25*((x1)*(sin((x3)+(2.5*x1))))))+((2*((((x2)+(x3))^(2))/(((1)+(x1^2))^(2)))))+((-2*(((4*((((x2)+(x3))^(2))*(x1^2)*((1)+(x1^2)))))/((((1)+(x1^2))^(2))^(2))))) 
  | d^2(y2) / d(x2)d(x1) = ((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2)) 
  |    d^2(y2) / d(x2)^2 = (-((2)/((1)+(x1^2)))) 
  | d^2(y2) / d(x3)d(x1) = (cos((x3)+(2.5*x1)))+((-2.5*((x1)*(sin((x3)+(2.5*x1))))))+(((2*(((2*x2)+(2*x3))*(x1))))/(((1)+(x1^2))^(2))) 
  | d^2(y2) / d(x3)d(x2) = (-((2)/((1)+(x1^2)))) 
  |    d^2(y2) / d(x3)^2 = ((-((x1)*(sin((x3)+(2.5*x1))))))+((-((2)/((1)+(x1^2))))) 
,NumericalMathFunction :
  input  : [x1,x2,x3]
  output : [y1]
  evaluation :   exp(-x1 * x2 + x3) / cos(1.0 + x2 * x3 - x1)
  gradient   :   
  | d(y1) / d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))))) 
  | d(y1) / d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 
  | d(y1) / d(x3) = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2))) 

  hessian    :   
  |    d^2(y1) / d(x1)^2 = (((x2^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-((((-((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))))+((-((cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+(((2*((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))) 
  | d^2(y1) / d(x2)d(x1) = ((-(((exp(((-((x1)*(x2))))+(x3)))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x1)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((-((x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x2)^2 = (((x1^2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((-((x1)*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x3^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x3)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x3^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x1) = ((-(((x2)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+((-(((exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))))+((((-((x2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))))+((-((x2^2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  | d^2(y1) / d(x3)d(x2) = ((-(((x1)*(exp(((-((x1)*(x2))))+(x3))))/(cos((1)+((x2)*(x3))+(-1*x1))))))+(((x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(x3)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((-((x1)*(x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(x3)*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
  |    d^2(y1) / d(x3)^2 = ((exp(((-((x1)*(x2))))+(x3)))/(cos((1)+((x2)*(x3))+(-1*x1))))+(((x2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((((x2^2)*(cos((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3))))+((x2)*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))))/((cos((1)+((x2)*(x3))+(-1*x1)))^(2)))+((-(((-2*((x2^2)*(sin((1)+((x2)*(x3))+(-1*x1)))*(exp(((-((x1)*(x2))))+(x3)))*(sin((1)+((x2)*(x3))+(-1*x1)))*(cos((1)+((x2)*(x3))+(-1*x1))))))/(((cos((1)+((x2)*(x3))+(-1*x1)))^(2))^(2))))) 
]
  gradient   :   NumericalMathGradientImplementation
  hessian    :   NumericalMathHessianImplementation
